CREATE OR REPLACE PACKAGE PC_CARRERAS IS
    PROCEDURE AD_CARRERA(xCODIGO IN VARCHAR,xNombre IN VARCHAR,xPais IN VARCHAR,xCategoria IN NUMBER,xPERIODICIDAD IN VARCHAR,xNombreversion IN VARCHAR);
    PROCEDURE AD_PUNTO(xNombre IN VARCHAR,xTipo IN VARCHAR, xDistancia IN NUMBER, xTiempoLimite IN NUMBER,xCodigoca IN VARCHAR,xNombreSegmento IN VARCHAR);
    PROCEDURE AD_PropiedadDe(xPorcentaje IN NUMBER,xCodigoca IN VARCHAR,xIdMiembro IN NUMBER);
    PROCEDURE MOD_CARRERA(xCodigo IN VARCHAR,xNombre IN VARCHAR,xPais IN VARCHAR,xCategoria IN NUMBER,xPeriodicidad IN VARCHAR,xNombreVersion IN VARCHAR);
    PROCEDURE MOD_PROPIEDADDE(xCodigoCa IN NUMBER,xIdMiembro IN NUMBER,xPorcentaje IN NUMBER);
    PROCEDURE EL_CARRERA(xCodigo IN VARCHAR);
    PROCEDURE EL_PROPIEDADDE(xCodigoCa IN NUMBER,xIdMiembro IN NUMBER);
    FUNCTION CO_CARRERA RETURN SYS_REFCURSOR;
    FUNCTION CO_PUNTO RETURN SYS_REFCURSOR;
END pc_carreras;
/
CREATE OR REPLACE PACKAGE BODY PC_CARRERAS IS
    PROCEDURE AD_CARRERA(xCODIGO IN VARCHAR,xNombre IN VARCHAR,xPais IN VARCHAR,xCategoria IN NUMBER,xPERIODICIDAD IN VARCHAR,xNombreversion IN VARCHAR)IS
        BEGIN
            INSERT INTO CARRERA(CODIGO,NOMBRE,PAIS,CATEGORIA,PERIODICIDAD,NOMBREVERSION)VALUES(xCODIGO,xNOMBRE,xPAIS,xCATEGORIA,xPERIODICIDAD,xNOMBREVERSION);
            COMMIT;
            EXCEPTION
            WHEN OTHERS THEN
                ROLLBACK;
                RAISE_APPLICATION_ERROR(-20011,'NO SE PUEDE INSERTAR');
        END;
    PROCEDURE AD_PUNTO(xNombre IN VARCHAR,xTipo IN VARCHAR, xDistancia IN NUMBER, xTiempoLimite IN NUMBER,xCodigoca IN VARCHAR,xNombreSegmento IN VARCHAR)IS
        BEGIN
            INSERT INTO PUNTO(Nombre,Tipo,distancia,tiempolimite,codigoca,nombresegmento)values(xNombre,xTipo,xdistancia,xtiempolimite,xcodigoca,xnombresegmento);
            COMMIT;
            EXCEPTION
            WHEN OTHERS THEN
                ROLLBACK;
                RAISE_APPLICATION_ERROR(-20012,'NO SE PUEDE INSERTAR');
        END;
    PROCEDURE AD_PropiedadDe(xPorcentaje IN NUMBER,xCodigoca IN VARCHAR,xIdMiembro IN NUMBER)IS
        BEGIN
            INSERT INTO PROPIEDADDE(PORCENTAJE,CODIGOCA,IDMIEMBRO)VALUES(xPORCENTAJE,xCODIGOCA,xIDMIEMBRO);
            COMMIT;
            EXCEPTION
            WHEN OTHERS THEN
                ROLLBACK;
                RAISE_APPLICATION_ERROR(-20013,'NO SE PUEDE INSERTAR');
        END;
    PROCEDURE MOD_CARRERA(xCodigo IN VARCHAR,xNombre IN VARCHAR,xPais IN VARCHAR,xCategoria IN NUMBER,xPeriodicidad IN VARCHAR,xNombreVersion IN VARCHAR)IS
        BEGIN
            UPDATE CARRERA SET NOMBRE=xNOMBRE,PAIS=xPAIS,CATEGORIA=xCATEGORIA,PERIODICIDAD=xPERIODICIDAD,NOMBREVERSION=xPERIODICIDAD WHERE CODIGO=xCODIGO;
            COMMIT;
            EXCEPTION
            WHEN OTHERS THEN
                ROLLBACK;
                RAISE_APPLICATION_ERROR(-20014,'NO SE PUEDE ACTUALIZAR');
        END;
    PROCEDURE MOD_PUNTO(xCodigoca IN VARCHAR,xTiempoLimite IN NUMBER)IS
        BEGIN
            UPDATE PUNTO SET TIEMPOLIMITE=xTIEMPOLIMITE WHERE CODIGOCA=xCODIGOCA;
            COMMIT;
            EXCEPTION
            WHEN OTHERS THEN
                ROLLBACK;
                RAISE_APPLICATION_ERROR(-20015,'NO SE PUEDE ACTUALIZAR');
        END;
    PROCEDURE MOD_PROPIEDADDE(xCodigoCa IN NUMBER,xIdMiembro IN NUMBER,xPorcentaje IN NUMBER)IS
        BEGIN
            UPDATE PROPIEDADDE SET Porcentaje=xPorcentaje WHERE IdMiembro=xIdMiembro AND CODIGOCA=xCODIGOCA;
            COMMIT;
            EXCEPTION
            WHEN OTHERS THEN
                ROLLBACK;
                RAISE_APPLICATION_ERROR(-20016,'NO SE PUEDE ACTUALIZAR');
        END;
    PROCEDURE EL_CARRERA(xCodigo IN VARCHAR)IS
        BEGIN
            DELETE FROM CARRERA WHERE codigo=xCODIGO;
            COMMIT;
            EXCEPTION
            WHEN OTHERS THEN
                ROLLBACK;
                RAISE_APPLICATION_ERROR(-20017,'NO SE PUEDE ELIMINAR');
        END;
    PROCEDURE EL_PROPIEDADDE(xCodigoCa IN NUMBER,xIdMiembro IN NUMBER)IS
        BEGIN 
            DELETE FROM PROPIEDADDE WHERE codigoca=xCODIGOCA;
            COMMIT;
            EXCEPTION
            WHEN OTHERS THEN
                ROLLBACK;
                RAISE_APPLICATION_ERROR(-20018,'NO SE PUEDE ELIMINAR');
        END;
    FUNCTION CO_CARRERA RETURN SYS_REFCURSOR IS CO_ER SYS_REFCURSOR;
    BEGIN
    OPEN CO_ER FOR 
        SELECT * FROM CARRERA;
    RETURN CO_ER;
    END;
    FUNCTION CO_PUNTO RETURN SYS_REFCURSOR IS CO_ER SYS_REFCURSOR;
    BEGIN
    OPEN CO_ER FOR 
        SELECT * FROM PUNTO;
    RETURN CO_ER;
    END;
    FUNCTION CO_PROPIEDADDE RETURN SYS_REFCURSOR IS CO_ER SYS_REFCURSOR;
    BEGIN
    OPEN CO_ER FOR 
        SELECT * FROM PROPIEDADDE;
    RETURN CO_ER;
    END;
END PC_CARRERAS;
